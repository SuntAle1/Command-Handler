////////////////////////////////////////////////////////////////////////////////
///////////////////////////const things/////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
const Discord = require('discord.js')
const client = new Discord.Client();
const express = require('express');
const app = express();
const mongoose = require('mongoose');
const { default_prefix } = require('./config.json');
const { readdirSync } = require('fs');
const { join } = require('path');
const ms = require('ms');
////////////////////////////////////////////////////////////////////////////////
///////////////////////////const things/////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////
///////////////////////////mongo db/////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
mongoose.connect(process.env.mongodb, {
  useUnifiedTopology : true,
  useNewUrlParser: true,
}).then(console.log('Connected to mongo db!'))

////////////////////////////////////////////////////////////////////////////////
///////////////////////////mongo db/////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////
///////////////////////////express thing////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
app.get("/", (req, res) => {
  res.send('Hello!')
})

app.listen(3000, () => {
  console.log('Bot ready!')
})
////////////////////////////////////////////////////////////////////////////////
///////////////////////////express thing////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////
///////////////////////////command handler//////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
client.commands = new Discord.Collection();
client.cooldowns = new Discord.Collection();

const commandFolder = readdirSync('./commands');

for( const folder of commandFolder) {
  const commandFiles = readdirSync(`./commands/${folder}`).filter(file => file.endsWith('.js'));
  for(const file of commandFiles) {
    const command = require(`./commands/${folder}/${file}`);
    client.commands.set(command.name, command);
  }
}
////////////////////////////////////////////////////////////////////////////////
///////////////////////////command handler//////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////
/////////////////////////////message event//////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
client.on('message', async message => {

  if(message.author.bot) return;
  if(message.channel.type === 'dm') return;

  if(message.content.startsWith(default_prefix)) {
    const args = message.content.slice(default_prefix.length).trim().split(/ +/);

    const command = args.shift().toLowerCase();
  if(!client.commands.has(command)) return;

  try {
client.commands.get(command).run(client, message, args);
  } catch (error) {
    console.log(error);
  }
  }
})
////////////////////////////////////////////////////////////////////////////////
///////////////////////////message event////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////
///////////////////////////token ///////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
client.login(process.env.token)
////////////////////////////////////////////////////////////////////////////////
///////////////////////////token////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////